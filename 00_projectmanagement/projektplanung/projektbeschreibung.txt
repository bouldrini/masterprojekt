Rahmbedingungen:
	- Hoster 'Digital Ocean'
	- Betriebssystem 'Ubuntu 16.04'
	- gleich große Server



Kernfrage
	- Wieviele Knoten von einer Serverkategorie braucht es mindestens um eine festgelegte Anzahl an Requests pro Sekunde auf ein Cluster mit einer festgelegten Datenmenge innerhalb einer festgelegten Zeitspanne abzuarbeiten ?



Szenarien
	- Serverkategorien:
		- Min: 	  40,00$,  8GB RAM,  160GB SSD
		- Medium: 80,00$,  16GB RAM, 320GB SSD
		- Large:  160,00$, 32GB RAM, 640GB SSD

	- Datenmenge:
		- Beispieldokument (1.37 KB -> 1402 B):
			{
                "title" => text,
                "tags" => keyword,
                "category" => integer,
                "total_rent" => integer,
                "caution" => integer,
                "location" => geo_point,
                "street" => text,
                "zip_code" => text,
                "inserat_type" => integer,
                "inserat_provider" => integer
			}

		- 8.000.000 Dokumente -> ca. 10.5 GB Datenmenge
		- 16.000.000 Dokumente -> ca. 21.0 GB Datenmenge
		- 32.000.000 Dokumente -> ca. 42.0 GB Datenmenge
		- ...

	- festgelegte Anzahl an Requests pro Sekunde:
		- 4.0  Requests/Sekunde  ->  10.368.000 Requests/Monat 	(> fluege.de)
		- 8.0  Requests/Sekunde  ->  20.736.000 Requests/Monat 	(< trivago.com)
		- 16.0 Requests/Sekunde  ->  41.472.000 Requests/Monat 	(> immoscout24.com)
		- 32.0 Requests/Sekunde  ->  82.944.000 Requests/Monat 	(-)

	- festgelegte Antwortzeiten (Responsetimekategorien)
		- schlecht (6 - 8 Sekunden)
		- mittel (4 - 6 Sekunden)
		- gut (2 - 4 Sekunden)



Umsetzung:
	- Ansible Playbook zum Aufsetzen des Elasticsearch Clusters (Beitrag zur Literatur)
		- empfohlene Elasticsearch und Systemeinstellungen
			- Referenz: https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html
			- Definitive Guide: https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html
		- dynamisch skalier- und konfigurierbar (Anzahl der Server und Knotenkonfiguration einfach änderbar)

	- Erstellung des Elasticsearch Indexes
	- Script zum Indexieren der Beispieldaten in PHP

	- Definition einer geeigneten Query Abfrage
		- Volltextsuche auf title und description
		- Geo-distance Filter mit longitude und latitude
		- Filter nach Preis
		- Paginierung auf 100 Elemente

	- Testerstellung in Scala (Gatling)



Testdurchführung:
	- Test mit Gatling
		- Tests pro Kombination aus Serverkategorie, Serveranzahl, Datenmenge und Requestanzahl
		- Sicherung der Testergebnisse in Verzeichnisstruktur
		- Zusammentragen der empirischen Daten
		- Einstufung in Responsetimekategorie


Dokumentation der Ergebnisse
	- Auswertung
		- Beantwortung der Kernfragen:
			- Wieviele Knoten von einer Serverkategorie braucht es mindestens um während einer Elasticsearch Suchabfrage eine festgelegte Anzahl an Requests pro Sekunde auf ein Cluster mit einer festgelegten Datenmenge innerhalb einer festgelegten Zeitspanne abarbeiten zu können ?

			- Welche Serverkategorie ist für jedes Testszenario mit guten Antowrtzeiten zu wählen, sodass die Kosten für den Betrieb des Clusters minimal werden ?

	- Abgabe
		- Projektdokumentation
		- Ansible Playbooks
		- Script zur Beispieldatengenerierung
		- Testscripte

		- Gesicherte Testergebnisse
		- Diagramme für Avg. Responsetime je Szenario
		- Tabelle mit Testergebnissen


Abgabe
	- kleinen Teil Projektmanagementdokumente
	- keine Wissenschaftliche Arbeit
	- Beschreibung der Teilmodule
	- Bilder, Diagramme in Doku




